## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Sensor Reading'
description: |-

  APIs for Sensor Reading management.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/webhook
    metadata:
      groupName: 'Sensor Reading'
      groupDescription: |-

        APIs for Sensor Reading management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store sensor readings received from a webhook.'
      description: 'This endpoint receives sensor data from a specified machine and stores it in the database.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Sensor readings saved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "Failed to save sensor readings: <error_message>"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "Failed to save sensor readings: <error_message>"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/sensor-readings
    metadata:
      groupName: 'Sensor Reading'
      groupDescription: |-

        APIs for Sensor Reading management.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Sensor Readings'
      description: |-
        Retrieve a paginated list of sensor readings, with optional filtering by sensor ID.

        Before using this endpoint:
        - Ensure sensor readings are available.

        After using this endpoint:
        - You will receive a paginated list of sensor readings, optionally filtered by sensor ID.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":26,"machine_id":10,"machine_name":"qui","machine_type":"Painting Robot","sensor_data":"{\"humidity\": 51, \"timestamp\": \"1980-07-15T08:08:37+0000\", \"machine_id\": 10, \"temperature\": 30, \"arm_position\": {\"x\": 148.44, \"y\": 87.51, \"z\": 206.69}, \"atomizer_speed\": 15998, \"spray_pressure\": 2.1, \"paint_flow_rate\": 4.8, \"paint_thickness\": 111, \"paint_volume_used\": 0.61, \"solvent_concentration\": 9.51, \"booth_airflow_velocity\": 0.53, \"overspray_capture_efficiency\": 97}","reading_time":"1971-11-21 09:59:56"},{"id":27,"machine_id":4,"machine_name":"placeat","machine_type":"CNC Machine","sensor_data":"{\"chip_load\": 0.26, \"cut_depth\": 6, \"feed_rate\": 208, \"timestamp\": \"1979-03-19T21:00:01+0000\", \"machine_id\": 4, \"temperature\": 50, \"spindle_speed\": 10756, \"tool_wear_level\": 8, \"vibration_level\": 1.22, \"coolant_flow_rate\": 0.45, \"material_hardness\": 232, \"power_consumption\": 9.63}","reading_time":"1993-05-01 23:01:56"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":10,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "sensor_id": 3,
                "reading_value": 45.6,
                "created_at": "2024-10-18T10:00:00.000000Z",
                "updated_at": "2024-10-18T10:00:00.000000Z"
              },
              ...
            ],
            "links": {...},
            "meta": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/sensor-readings/{sensor_reading_id}'
    metadata:
      groupName: 'Sensor Reading'
      groupDescription: |-

        APIs for Sensor Reading management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a Sensor Reading'
      description: |-
        Retrieve details of a specific sensor reading by ID.

        Before using this endpoint:
        - Ensure that the sensor reading exists.

        After using this endpoint:
        - You will receive the details of the selected sensor reading.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sensor_reading_id:
        name: sensor_reading_id
        description: 'The ID of the sensor reading.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sensor_reading_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":28,"machine_id":2,"machine_name":"vel","machine_type":"Leak Test Machine","sensor_data":"{\"status\": \"pass\", \"leak_rate\": 0.94, \"timestamp\": \"1980-02-08T13:20:24+0000\", \"fluid_type\": \"air\", \"machine_id\": 2, \"temperature\": 30, \"pressure_drop\": 1, \"test_duration\": 45, \"test_pressure\": 9.9, \"seal_condition\": \"fail\", \"test_cycle_count\": 1501}","reading_time":"2013-07-12 07:40:57"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "id": 1,
            "sensor_id": 3,
            "reading_value": 45.6,
            "created_at": "2024-10-18T10:00:00.000000Z",
            "updated_at": "2024-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/sensor-readings/{sensor_reading_id}'
    metadata:
      groupName: 'Sensor Reading'
      groupDescription: |-

        APIs for Sensor Reading management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Sensor Reading'
      description: |-
        Permanently remove a sensor reading from the system.

        Before using this endpoint:
        - Ensure that the sensor reading exists.

        After using this endpoint:
        - The sensor reading will be deleted from the system.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sensor_reading_id:
        name: sensor_reading_id
        description: 'The ID of the sensor reading.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sensor_reading_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Sensor reading deleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
