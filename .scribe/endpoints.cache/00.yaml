## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Sensor Reading'
description: |-

  APIs for Sensor Reading management.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/webhook
    metadata:
      groupName: 'Sensor Reading'
      groupDescription: |-

        APIs for Sensor Reading management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store sensor readings received from a webhook.'
      description: 'This endpoint receives sensor data from a specified machine and stores it in the database.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Sensor readings saved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "error": "Failed to save sensor readings: <error_message>"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "Failed to save sensor readings: <error_message>"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/sensor-readings
    metadata:
      groupName: 'Sensor Reading'
      groupDescription: |-

        APIs for Sensor Reading management.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Sensor Readings'
      description: |-
        Retrieve a paginated list of sensor readings, with optional filtering by machine ID.

        Before using this endpoint:
        - Ensure sensor readings are available.

        After using this endpoint:
        - You will receive a paginated list of sensor readings, optionally filtered by machine ID.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":35,"machine_id":29,"machine_name":"aut","machine_type":"Painting Robot","sensor_data":"{\"humidity\": 52, \"timestamp\": \"2019-08-04T15:30:42+0000\", \"machine_id\": 29, \"temperature\": 24, \"arm_position\": {\"x\": 105.72, \"y\": 88.39, \"z\": 184.27}, \"atomizer_speed\": 24252, \"spray_pressure\": 2.8, \"paint_flow_rate\": 4.3, \"paint_thickness\": 125, \"paint_volume_used\": 0.85, \"solvent_concentration\": 9.69, \"booth_airflow_velocity\": 0.95, \"overspray_capture_efficiency\": 95}","reading_time":"2015-02-12 02:38:17"},{"id":36,"machine_id":34,"machine_name":"velit","machine_type":"Stamping Press","sensor_data":"{\"timestamp\": \"1999-02-26T02:08:14+0000\", \"cycle_time\": 10, \"machine_id\": 34, \"cycle_count\": 1469, \"noise_level\": 85, \"temperature\": 69, \"oil_pressure\": 3, \"die_alignment\": \"misaligned\", \"force_applied\": 409, \"sheet_thickness\": 1.1, \"vibration_level\": 0.84, \"power_consumption\": 13.12, \"lubrication_flow_rate\": 0.88}","reading_time":"2011-11-09 13:06:44"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":10,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "machine_id": 2,
                "sensor_data": " {
                   "machine_id": "welding_robot_006",
                   "weld_temperature": 1600,             // in °C
                   "weld_current": 150,                  // in A (amperes)
                   "weld_voltage": 30,                   // in V
                   "weld_time": 500,                     // in milliseconds
                   "pressure_applied": 1000,             // in N (newtons)
                   "arm_position": {"x": 120.5, "y": 80.4, "z": 200.3},  // spatial coordinates
                   "wire_feed_rate": 5,                  // in mm/min (arc welding)
                   "gas_flow_rate": 20,                  // in l/min
                   "weld_strength_estimate": 2000,       // in N
                   "vibration_level": 0.2,               // in mm/s
                   "power_consumption": 3.5,             // in kWh
                   "timestamp": "2024-10-14T11:00:00Z"
                }",
                "reading_time": "2024-10-18T10:00:00.000000Z",
                "created_at": "2024-10-18T10:00:00.000000Z",
                "updated_at": "2024-10-18T10:00:00.000000Z"
              },
              ...
            ],
            "links": {...},
            "meta": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EPvV8a6ckd3f4Zh56D1ageb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/sensor-readings/{sensor_reading_id}'
    metadata:
      groupName: 'Sensor Reading'
      groupDescription: |-

        APIs for Sensor Reading management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a Sensor Reading'
      description: |-
        Retrieve details of a specific sensor reading by ID.

        Before using this endpoint:
        - Ensure that the sensor reading exists.

        After using this endpoint:
        - You will receive the details of the selected sensor reading.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sensor_reading_id:
        name: sensor_reading_id
        description: 'The ID of the sensor reading.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sensor_reading_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":37,"machine_id":2,"machine_name":"aliquam","machine_type":"Welding Robot","sensor_data":"{\"timestamp\": \"2008-10-26T21:59:25+0000\", \"weld_time\": 514, \"machine_id\": 2, \"arm_position\": {\"x\": 122.04, \"y\": 87.49, \"z\": 217.66}, \"weld_current\": 132, \"weld_voltage\": 33, \"gas_flow_rate\": 17, \"wire_feed_rate\": 10, \"vibration_level\": 0.28, \"pressure_applied\": 1199, \"weld_temperature\": 1512, \"power_consumption\": 4.91, \"weld_strength_estimate\": 1931}","reading_time":"1990-09-10 20:21:03"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "id": 1,
            "machine_id": 2,
            "sensor_data": " {
                   "machine_id": "welding_robot_006",
                   "weld_temperature": 1600,             // in °C
                   "weld_current": 150,                  // in A (amperes)
                   "weld_voltage": 30,                   // in V
                   "weld_time": 500,                     // in milliseconds
                   "pressure_applied": 1000,             // in N (newtons)
                   "arm_position": {"x": 120.5, "y": 80.4, "z": 200.3},  // spatial coordinates
                   "wire_feed_rate": 5,                  // in mm/min (arc welding)
                   "gas_flow_rate": 20,                  // in l/min
                   "weld_strength_estimate": 2000,       // in N
                   "vibration_level": 0.2,               // in mm/s
                   "power_consumption": 3.5,             // in kWh
                   "timestamp": "2024-10-14T11:00:00Z"
            }",
            "reading_time": "2024-10-18T10:00:00.000000Z",
            "created_at": "2024-10-18T10:00:00.000000Z",
            "updated_at": "2024-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86h3kVD1E5PcaeZgvbf6a4d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/sensor-readings/{sensor_reading_id}'
    metadata:
      groupName: 'Sensor Reading'
      groupDescription: |-

        APIs for Sensor Reading management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Sensor Reading'
      description: |-
        Permanently remove a sensor reading from the system.

        Before using this endpoint:
        - Ensure that the sensor reading exists.

        After using this endpoint:
        - The sensor reading will be deleted from the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      sensor_reading_id:
        name: sensor_reading_id
        description: 'The ID of the sensor reading.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      sensor_reading_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Sensor reading deleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer acveVbZg5dkD4368PahfE16'
    controller: null
    method: null
    route: null
    custom: []
