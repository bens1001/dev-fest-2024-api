## Autogenerated by Scribe. DO NOT MODIFY.

name: Production
description: |-

  APIs for Production management.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/productions
    metadata:
      groupName: Production
      groupDescription: |-

        APIs for Production management.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Productions'
      description: |-
        Retrieve a paginated list of production records, with optional filtering by machine ID.

        Before using this endpoint:
        - Ensure productions have been recorded.

        After using this endpoint:
        - You will receive a list of production records, optionally filtered by machine ID.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":51,"machine_id":3,"machine_name":"pariatur","machine_type":"CNC Machine","start_time":"2024-10-26 07:50:27","end_time":"2024-10-29 11:57:40","output_quantity":883,"target_quantity":32},{"id":52,"machine_id":7,"machine_name":"alias","machine_type":"Automated Guided Vehicle","start_time":"2024-10-22 00:02:41","end_time":"2024-11-01 13:11:22","output_quantity":402,"target_quantity":703}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":10,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "machine_id": 5,
                "machine_name": "Machine A",
                "machine_type": "Type X",
                "start_time": "2024-10-18T09:00:00.000000Z",
                "end_time": "2024-10-18T10:00:00.000000Z",
                "output_quantity": 1000,
                "target_quantity": 1200,
                "production_date": "2024-10-18",
                "created_at": "2024-10-18T10:00:00.000000Z",
                "updated_at": "2024-10-18T10:00:00.000000Z"
              },
              ...
            ],
            "links": {...},
            "meta": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3ae5E81VfPcdghv4kbaZ6D6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/productions/{production_id}'
    metadata:
      groupName: Production
      groupDescription: |-

        APIs for Production management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a Production Record'
      description: |-
        Retrieve details of a specific production record by ID.

        Before using this endpoint:
        - Ensure that the production record exists.

        After using this endpoint:
        - You will receive detailed information about the selected production record.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      production_id:
        name: production_id
        description: 'The ID of the production.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      production_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":53,"machine_id":50,"machine_name":"consequatur","machine_type":"Painting Robot","start_time":"2024-10-20 17:57:15","end_time":"2024-10-27 18:52:39","output_quantity":9,"target_quantity":46}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "id": 1,
            "machine_id": 5,
            "machine_name": "Machine A",
            "machine_type": "Type X",
            "start_time": "2024-10-18T09:00:00.000000Z",
            "end_time": "2024-10-18T10:00:00.000000Z",
            "output_quantity": 1000,
            "target_quantity": 1200,
            "production_date": "2024-10-18",
            "created_at": "2024-10-18T10:00:00.000000Z",
            "updated_at": "2024-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D1f6PvZb83hd56VEceagk4a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/productions/{machine_id}'
    metadata:
      groupName: Production
      groupDescription: |-

        APIs for Production management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a New Production Record'
      description: |-
        Add a new production record to the system.

        Before using this endpoint:
        - Provide necessary details (machine ID, production date, quantity, etc.).
        - The machine ID must correspond to an existing machine.

        After using this endpoint:
        - A new production record will be created.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      machine_id:
        name: machine_id
        description: 'The ID of the machine.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      machine_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_time:
        name: start_time
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>. Must be a date before <code>end_time</code>.'
        required: true
        example: '2017-09-28'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_time:
        name: end_time
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>. Must be a date after <code>start_time</code>.'
        required: true
        example: '2039-07-06'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      output_quantity:
        name: output_quantity
        description: ''
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      target_quantity:
        name: target_quantity
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_time: '2017-09-28'
      end_time: '2039-07-06'
      output_quantity: 6
      target_quantity: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":54,"machine_id":35,"machine_name":"cum","machine_type":"Welding Robot","start_time":"2024-10-21 02:28:27","end_time":"2024-11-01 02:40:30","output_quantity":472,"target_quantity":183}}'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "id": 1,
            "machine_id": 5,
            "machine_name": "Machine A",
            "machine_type": "Type X",
            "start_time": "2024-10-18T09:00:00.000000Z",
            "end_time": "2024-10-18T10:00:00.000000Z",
            "output_quantity": 1000,
            "target_quantity": 1200,
            "production_date": "2024-10-18",
            "created_at": "2024-10-18T10:00:00.000000Z",
            "updated_at": "2024-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h658ceDE13b4vZg6dPakafV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/productions/{production_id}'
    metadata:
      groupName: Production
      groupDescription: |-

        APIs for Production management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an Existing Production Record'
      description: |-
        Modify the details of an existing production record by its ID.

        Before using this endpoint:
        - Ensure that the production record exists.
        - Provide updated production details.

        After using this endpoint:
        - The production record's details will be updated in the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      production_id:
        name: production_id
        description: 'The ID of the production.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      production_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_time:
        name: start_time
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>. Must be a date before <code>end_time</code>.'
        required: false
        example: '2008-02-07'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_time:
        name: end_time
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>. Must be a date after <code>start_time</code>.'
        required: false
        example: '2070-06-06'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      output_quantity:
        name: output_quantity
        description: ''
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      target_quantity:
        name: target_quantity
        description: ''
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_time: '2008-02-07'
      end_time: '2070-06-06'
      output_quantity: 10
      target_quantity: 14
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":55,"machine_id":15,"machine_name":"harum","machine_type":"Stamping Press","start_time":"2024-10-20 16:12:40","end_time":"2024-10-26 23:01:50","output_quantity":147,"target_quantity":949}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "id": 1,
            "machine_id": 5,
            "machine_name": "Machine A",
            "machine_type": "Type X",
            "start_time": "2024-10-18T09:00:00.000000Z",
            "end_time": "2024-10-18T10:10:00.000000Z",
            "output_quantity": 1200,
            "target_quantity": 1200,
            "production_date": "2024-10-18",
            "created_at": "2024-10-18T10:00:00.000000Z",
            "updated_at": "2024-10-18T10:10:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c564Ze1Dhv83agPfVka6dEb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/productions/{production_id}'
    metadata:
      groupName: Production
      groupDescription: |-

        APIs for Production management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Production Record'
      description: |-
        Permanently remove a production record from the system.

        Before using this endpoint:
        - Ensure that the production record exists.

        After using this endpoint:
        - The production record will be removed from the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      production_id:
        name: production_id
        description: 'The ID of the production.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      production_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Production deleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 56fa6gd84EDkPeabZch1v3V'
    controller: null
    method: null
    route: null
    custom: []
