## Autogenerated by Scribe. DO NOT MODIFY.

name: Machine
description: |-

  APIs for Machine management.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/machines
    metadata:
      groupName: Machine
      groupDescription: |-

        APIs for Machine management.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Machines'
      description: |-
        Retrieve a paginated list of machines, with optional filtering by status and machine type.

        Before using this endpoint:
        - Ensure machines have been added to the system.

        After using this endpoint:
        - You will get a list of machines, optionally filtered by status or machine type.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":91,"machine_type":"Automated Guided Vehicle","machine_name":"quia","status":"maintenance","last_maintenance":"2024-03-29 13:51:51","first_usage":"2024-10-22 02:00:31"},{"id":92,"machine_type":"Leak Test Machine","machine_name":"perspiciatis","status":"idle","last_maintenance":"2024-08-07 06:23:15","first_usage":"2024-01-24 16:22:11"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":10,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "machine_type": "type1",
                "machine_name": "Machine A",
                "status": "active",
                "last_maintenance": "2024-10-18T10:00:00.000000Z",
                "first_usage": "2023-10-18T10:00:00.000000Z"
              },
              ...
            ],
            "links": {...},
            "meta": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PV5a8h6kZ63vcb4fE1eDagd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/machines/{machine_id}'
    metadata:
      groupName: Machine
      groupDescription: |-

        APIs for Machine management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a Machine'
      description: |-
        Retrieve details of a specific machine by ID.

        Before using this endpoint:
        - Ensure that the machine exists in the system.

        After using this endpoint:
        - You will receive detailed information about the selected machine.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      machine_id:
        name: machine_id
        description: 'The ID of the machine.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      machine_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":93,"machine_type":"Automated Guided Vehicle","machine_name":"nihil","status":"maintenance","last_maintenance":"2024-03-07 14:07:30","first_usage":"2024-01-13 05:20:35"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "id": 1,
            "machine_type": "type1",
            "machine_name": "Machine A",
            "status": "active",
            "last_maintenance": "2024-10-18T10:00:00.000000Z",
            "first_usage": "2023-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vv16ca4a5ZEf8gbDdhPke63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/machines
    metadata:
      groupName: Machine
      groupDescription: |-

        APIs for Machine management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a New Machine'
      description: |-
        Add a new machine to the system.

        Before using this endpoint:
        - Provide necessary machine details (name, status, machine type, etc.).

        After using this endpoint:
        - A new machine will be created in the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      machine_type:
        name: machine_type
        description: ''
        required: true
        example: 'Welding Robot'
        type: string
        enumValues:
          - 'Welding Robot'
          - 'Stamping Press'
          - 'Painting Robot'
          - 'Automated Guided Vehicle'
          - 'CNC Machine'
          - 'Leak Test Machine'
        exampleWasSpecified: false
        nullable: false
        custom: []
      machine_name:
        name: machine_name
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: idle
        type: string
        enumValues:
          - running
          - idle
          - maintenance
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_maintenance:
        name: last_maintenance
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>. Must be a date before <code>now</code>. Must be a date after <code>first_usage</code>.'
        required: true
        example: '2092-09-10'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_usage:
        name: first_usage
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>. Must be a date before <code>now</code>. Must be a date before <code>last_maintenance</code>.'
        required: true
        example: '2016-04-12'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      machine_type: 'Welding Robot'
      machine_name: quis
      status: idle
      last_maintenance: '2092-09-10'
      first_usage: '2016-04-12'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":94,"machine_type":"Welding Robot","machine_name":"nihil","status":"idle","last_maintenance":"2024-04-25 00:45:17","first_usage":"2024-08-24 00:24:14"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "id": 1,
            "machine_type": "type1",
            "machine_name": "Machine A",
            "status": "active",
            "last_maintenance": "2024-10-18T10:00:00.000000Z",
            "first_usage": "2023-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6EeDv1b58ZVgcP6fa3ahk4d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/machines/{machine_id}'
    metadata:
      groupName: Machine
      groupDescription: |-

        APIs for Machine management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an Existing Machine'
      description: |-
        Modify the details of an existing machine by its ID.

        Before using this endpoint:
        - Ensure that the machine exists.
        - Provide updated machine details.

        After using this endpoint:
        - The machine's details will be updated in the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      machine_id:
        name: machine_id
        description: 'The ID of the machine.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      machine_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      machine_name:
        name: machine_name
        description: ''
        required: false
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: idle
        type: string
        enumValues:
          - running
          - idle
          - maintenance
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_maintenance:
        name: last_maintenance
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>. Must be a date before <code>now</code>. Must be a date after <code>first_usage</code>.'
        required: false
        example: '2065-08-26'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_usage:
        name: first_usage
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>. Must be a date before <code>now</code>. Must be a date before <code>last_maintenance</code>.'
        required: false
        example: '2003-01-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      machine_name: recusandae
      status: idle
      last_maintenance: '2065-08-26'
      first_usage: '2003-01-19'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":95,"machine_type":"Leak Test Machine","machine_name":"cumque","status":"idle","last_maintenance":"2024-01-20 00:31:24","first_usage":"2024-07-28 17:22:03"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "id": 1,
            "machine_type": "type2",
            "machine_name": "Machine B",
            "status": "inactive",
            "last_maintenance": "2024-10-18T10:10:00.000000Z",
            "first_usage": "2023-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8h534caveg6DbafdkE6V1ZP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/machines/{machine_id}'
    metadata:
      groupName: Machine
      groupDescription: |-

        APIs for Machine management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Machine'
      description: |-
        Permanently remove a machine from the system.

        Before using this endpoint:
        - Ensure that the machine exists.

        After using this endpoint:
        - The machine will be removed from the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      machine_id:
        name: machine_id
        description: 'The ID of the machine.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      machine_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Machine deleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kfcgE61ZdPDabe865vV43ha'
    controller: null
    method: null
    route: null
    custom: []
