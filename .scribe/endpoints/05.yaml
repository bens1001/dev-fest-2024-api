name: Task
description: |-

  APIs for Task management.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for Task management.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Tasks'
      description: |-
        Retrieve a paginated list of tasks, with optional filtering by status.

        Before using this endpoint:
        - Ensure tasks are available.

        After using this endpoint:
        - You will receive a paginated list of tasks, optionally filtered by status.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":43,"task_description":"energy usage logging","user_id":10,"user_full_name":"Mr. Raymundo Hauck","due_date":"2024-11-22 16:12:20","status":"todo","created_at":"2024-10-26T08:36:06.000000Z"},{"id":44,"task_description":"production logging","user_id":4,"user_full_name":"Ms. Jalyn Stanton","due_date":"2024-11-03 14:27:27","status":"pending","created_at":"2024-10-26T08:36:06.000000Z"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":10,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "task_description": "Task 1",
                "user_id": 1,
                "user_full_name": "John Doe",
                "due_date": "2024-10-30",
                "status": "pending",
                "created_at": "2024-10-18T10:00:00.000000Z"
              },
              ...
            ],
            "links": {...},
            "meta": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer baka6hVg41dvPE8eD56cfZ3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{task_id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for Task management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a Task'
      description: |-
        Retrieve details of a specific task by ID.

        Before using this endpoint:
        - Ensure that the task exists.

        After using this endpoint:
        - You will receive the details of the selected task.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":45,"task_description":"energy usage logging","user_id":10,"user_full_name":"Mr. Raymundo Hauck","due_date":"2024-11-14 18:49:22","status":"todo","created_at":"2024-10-26T08:36:06.000000Z"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "id": 1,
            "task_description": "Task 1",
            "user_id": 1,
            "user_full_name": "John Doe",
            "due_date": "2024-10-30",
            "status": "pending",
            "created_at": "2024-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1653a86keZhgcVvaEDdPbf4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{task_id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for Task management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a Task'
      description: |-
        Update the details of an existing task.

        Before using this endpoint:
        - Ensure that the task exists.

        After using this endpoint:
        - The task will be updated with the new details.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_description:
        name: task_description
        description: ''
        required: false
        example: tenetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d H:i:s</code>.'
        required: false
        example: '2024-10-26 08:36:06'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: pending
        type: string
        enumValues:
          - todo
          - pending
          - completed
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 15
      task_description: tenetur
      due_date: '2024-10-26 08:36:06'
      status: pending
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":46,"task_description":"energy usage logging","user_id":1,"user_full_name":"Admin","due_date":"2024-10-31 03:12:55","status":"completed","created_at":"2024-10-26T08:36:06.000000Z"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "id": 1,
            "task_description": "Updated Task",
            "user_id": 1,
            "user_full_name": "John Doe",
            "due_date": "2024-10-30",
            "status": "completed",
            "created_at": "2024-10-18T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kZf6dv4g8h6acbeP3VE1aD5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{task_id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for Task management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Task'
      description: |-
        Permanently remove a task from the system.

        Before using this endpoint:
        - Ensure that the task exists.

        After using this endpoint:
        - The task will be deleted from the system.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Task deleted"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3d5cPaZ618DaE6ekb4fvghV'
    controller: null
    method: null
    route: null
    custom: []
